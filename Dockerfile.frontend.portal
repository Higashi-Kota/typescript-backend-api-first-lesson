# Multi-stage build for Portal App
# Stage 1: Build stage
FROM node:24.4.0-alpine AS builder

# Install pnpm globally with specific version
ENV PNPM_VERSION=10.13.1
RUN npm install -g pnpm@${PNPM_VERSION}

# Set working directory
WORKDIR /app

# Copy package files for better caching
COPY package.json pnpm-workspace.yaml pnpm-lock.yaml* ./
COPY backend/packages/*/package.json ./backend/packages/*/
COPY frontend/packages/*/package.json ./frontend/packages/*/
COPY frontend/apps/portal-app/package.json ./frontend/apps/portal-app/
COPY specs/package.json ./specs/
COPY shared-config/package.json ./shared-config/

# Install dependencies
RUN pnpm install --frozen-lockfile

# Copy source code
COPY . .

# Generate API specifications and types
RUN pnpm generate

# Prepare frontend (generates types for frontend)
RUN pnpm prepare:frontend

# Build portal app for production
RUN pnpm --filter "@beauty-salon/portal-app" build:prod

# Stage 2: Production runtime
FROM node:24.4.0-alpine AS runtime

# Install serve for static file serving
RUN npm install -g serve@14 && npm cache clean --force

# Create app user for security
RUN addgroup -g 1001 -S nodejs && \
    adduser -S -u 1001 -G nodejs appuser

# Set working directory
WORKDIR /app

# Copy built application from builder stage
COPY --from=builder --chown=appuser:nodejs /app/frontend/apps/portal-app/dist/ ./dist/

# Create logs directory
RUN mkdir -p /app/logs && chown appuser:nodejs /app/logs

# Switch to non-root user
USER appuser

# Expose port 4002 for portal app
EXPOSE 4002

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD wget --no-verbose --tries=1 --spider http://localhost:4002/ || exit 1

# Start serve in SPA mode
CMD ["serve", "-s", "dist", "-l", "4002"]