/**
 * Generated by orval v7.10.0 üç∫
 * Do not edit manually.
 * (title)
 * Comprehensive API for managing beauty salon operations including salons, staff, services, customers, reservations, bookings, and reviews.
 * OpenAPI spec version: 0.0.0
 */
import type { ModelsUserRole } from './modelsUserRole'
import type { ModelsUserAccountStatus } from './modelsUserAccountStatus'
import type { ModelsTwoFactorStatus } from './modelsTwoFactorStatus'

/**
 * User authentication information
 */
export interface ModelsUser {
  /** Unique identifier for the user */
  id: string
  /** User's email address (unique) */
  email: string
  /** User's display name */
  name: string
  /** User's role in the system */
  role: ModelsUserRole
  /** Account status */
  status: ModelsUserAccountStatus
  /** Email verification status */
  emailVerified: boolean
  /** Email verification token (internal use) */
  emailVerificationToken?: string
  /** Email verification token expiry */
  emailVerificationTokenExpiry?: string
  /** Two-factor authentication status */
  twoFactorStatus: ModelsTwoFactorStatus
  /** Two-factor authentication secret (encrypted) */
  twoFactorSecret?: string
  /** Backup codes for 2FA recovery */
  backupCodes?: string[]
  /** Number of failed login attempts */
  failedLoginAttempts: number
  /** Time when the account was locked */
  lockedAt?: string
  /** Password reset token (internal use) */
  passwordResetToken?: string
  /** Password reset token expiry */
  passwordResetTokenExpiry?: string
  /** Last password change timestamp */
  lastPasswordChangeAt?: string
  /** Previous password hashes for history check */
  passwordHistory?: string[]
  /** Trusted IP addresses for this user */
  trustedIpAddresses?: string[]
  /** Reference to customer profile if user is a customer */
  customerId?: string
  /** Reference to staff profile if user is staff */
  staffId?: string
  /** Timestamp when the user was created */
  createdAt: string
  /** Timestamp when the user was last updated */
  updatedAt: string
  /** Last login timestamp */
  lastLoginAt?: string
  /** Last login IP address */
  lastLoginIp?: string
}
