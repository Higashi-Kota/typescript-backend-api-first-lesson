/**
 * Generated by orval v7.11.2 🍺
 * Do not edit manually.
 * Beauty Salon API
 * Comprehensive REST API for managing beauty salon operations including salons, staff, services, customers, reservations, bookings, treatments, payments, inventory, and access control. Built with TypeSpec for type-safe API-first development.
 * OpenAPI spec version: 2.0
 */

/**
 * ファイルの実体情報。ダウンロードや共有レスポンスで利用。
 */
export type ModelsAttachmentFile = {
  /** The allowed media (MIME) types of the file contents.

In file bodies, this value comes from the `Content-Type` header of the request or response. In JSON bodies,
this value is serialized as a field in the response.

NOTE: this is not _necessarily_ the same as the `Content-Type` header of the request or response, but
it will be for file bodies. It may be different if the file is serialized as a JSON object. It always refers to the
_contents_ of the file, and not necessarily the way the file itself is transmitted or serialized. */
  contentType?: string;
  /** The name of the file, if any.

In file bodies, this value comes from the `filename` parameter of the `Content-Disposition` header of the response
or multipart payload. In JSON bodies, this value is serialized as a field in the response.

NOTE: By default, `filename` cannot be sent in request payloads and can only be sent in responses and multipart
payloads, as the `Content-Disposition` header is not valid in requests. If you want to send the `filename` in a request,
you must extend the `File` model and override the `filename` property with a different location defined by HTTP metadata
decorators. */
  filename?: string;
  /** The contents of the file.

In file bodies, this value comes from the body of the request, response, or multipart payload. In JSON bodies,
this value is serialized as a field in the response. */
  contents: string;
};
